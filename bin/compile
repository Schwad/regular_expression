#!/usr/bin/env ruby
# frozen_string_literal: true

$:.unshift(File.expand_path("../lib", __dir__))
require "regular_expression"

require "crabstone"

pattern = RegularExpression::Pattern.new(ARGV.shift)
pattern.bytecode.dump
puts

cfg_builder = RegularExpression::CFG::Builder.new
cfg = cfg_builder.build(pattern.bytecode)
cfg.dump
puts
RegularExpression::CFG::Graph.to_dot(cfg)

ruby_src = RegularExpression::Compiler::Ruby.compile(cfg)
puts ruby_src.source
puts

ruby_proc = ruby_src.to_proc

ARGV.each do |string|
  puts "#{string}: #{ruby_proc.call(string)}"
end
puts

compiled = RegularExpression::Compiler::Native.compile(cfg)
crabstone = Crabstone::Disassembler.new(Crabstone::ARCH_X86, Crabstone::MODE_64)

crabstone.disasm(compiled.asm.memory.to_s(compiled.asm.pos), compiled.asm.memory.to_i).each do |i|
  printf "\t0x%<address>x:\t%<instruction>s\t%<details>s\n",
    address: i.address,
    instruction: i.mnemonic,
    details: i.op_str
end
puts

native_proc = compiled.to_proc

ARGV.each do |string|
  puts "#{string}: #{native_proc.call(string)}"
end
