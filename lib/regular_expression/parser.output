

-------- Grammar --------

rule 1 target: root
rule 2 target: 
rule 3 root: CARET expression
rule 4 root: expression
rule 5 expression: subexpression PIPE expression
rule 6 expression: subexpression
rule 7 subexpression: item subexpression
rule 8 subexpression: item
rule 9 item: group
rule 10 item: match
rule 11 item: ANCHOR
rule 12 group: LPAREN expression RPAREN quantifier
rule 13 group: LPAREN expression RPAREN
rule 14 match: match_item quantifier
rule 15 match: match_item
rule 16 match_item: LBRACKET CARET character_group_items RBRACKET
rule 17 match_item: LBRACKET character_group_items RBRACKET
rule 18 match_item: CHAR_CLASS
rule 19 match_item: CHAR_TYPE
rule 20 match_item: CHAR
rule 21 match_item: COMMA
rule 22 match_item: DASH
rule 23 match_item: INTEGER
rule 24 match_item: PERIOD
rule 25 character_group_items: character_group_item character_group_items
rule 26 character_group_items: character_group_item
rule 27 character_group_item: CHAR_CLASS
rule 28 character_group_item: CHAR DASH CHAR
rule 29 character_group_item: CHAR
rule 30 character_group_item: COMMA
rule 31 character_group_item: INTEGER
rule 32 quantifier: LBRACE multiple_integer COMMA multiple_integer RBRACE
rule 33 quantifier: LBRACE multiple_integer COMMA RBRACE
rule 34 quantifier: LBRACE COMMA multiple_integer RBRACE
rule 35 quantifier: LBRACE multiple_integer RBRACE
rule 36 quantifier: STAR
rule 37 quantifier: PLUS
rule 38 quantifier: QMARK
rule 39 multiple_integer: single_integer multiple_integer
rule 40 multiple_integer: single_integer
rule 41 single_integer: INTEGER

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (21)
    on right: 
    on left : 
  target (22)
    on right: 
    on left : 1 2
  root (23)
    on right: 1
    on left : 3 4
  expression (24)
    on right: 3 4 5 12 13
    on left : 5 6
  subexpression (25)
    on right: 5 6 7
    on left : 7 8
  item (26)
    on right: 7 8
    on left : 9 10 11
  group (27)
    on right: 9
    on left : 12 13
  match (28)
    on right: 10
    on left : 14 15
  quantifier (29)
    on right: 12 14
    on left : 32 33 34 35 36 37 38
  match_item (30)
    on right: 14 15
    on left : 16 17 18 19 20 21 22 23 24
  character_group_items (31)
    on right: 16 17 25
    on left : 25 26
  character_group_item (32)
    on right: 25 26
    on left : 27 28 29 30 31
  multiple_integer (33)
    on right: 32 33 34 35 39
    on left : 39 40
  single_integer (34)
    on right: 39 40
    on left : 41

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  CARET (2) 3 16
  PIPE (3) 5
  ANCHOR (4) 11
  LPAREN (5) 12 13
  RPAREN (6) 12 13
  LBRACKET (7) 16 17
  RBRACKET (8) 16 17
  CHAR_CLASS (9) 18 27
  CHAR_TYPE (10) 19
  CHAR (11) 20 28 29
  COMMA (12) 21 30 32 33 34
  DASH (13) 22 28
  INTEGER (14) 23 31 41
  PERIOD (15) 24
  LBRACE (16) 32 33 34 35
  RBRACE (17) 32 33 34 35
  STAR (18) 36
  PLUS (19) 37
  QMARK (20) 38

--------- State ---------

state 0


  CARET         shift, and go to state 3
  ANCHOR        shift, and go to state 9
  LPAREN        shift, and go to state 10
  LBRACKET      shift, and go to state 12
  CHAR_CLASS    shift, and go to state 13
  CHAR_TYPE     shift, and go to state 14
  CHAR          shift, and go to state 15
  COMMA         shift, and go to state 16
  DASH          shift, and go to state 17
  INTEGER       shift, and go to state 18
  PERIOD        shift, and go to state 19
  $default      reduce using rule 2 (target)

  target        go to state 1
  root          go to state 2
  expression    go to state 4
  subexpression  go to state 5
  item          go to state 6
  group         go to state 7
  match         go to state 8
  match_item    go to state 11

state 1


  $end          shift, and go to state 20


state 2

   1) target : root _

  $default      reduce using rule 1 (target)


state 3

   3) root : CARET _ expression

  ANCHOR        shift, and go to state 9
  LPAREN        shift, and go to state 10
  LBRACKET      shift, and go to state 12
  CHAR_CLASS    shift, and go to state 13
  CHAR_TYPE     shift, and go to state 14
  CHAR          shift, and go to state 15
  COMMA         shift, and go to state 16
  DASH          shift, and go to state 17
  INTEGER       shift, and go to state 18
  PERIOD        shift, and go to state 19

  expression    go to state 21
  subexpression  go to state 5
  item          go to state 6
  group         go to state 7
  match         go to state 8
  match_item    go to state 11

state 4

   4) root : expression _

  $default      reduce using rule 4 (root)


state 5

   5) expression : subexpression _ PIPE expression
   6) expression : subexpression _

  PIPE          shift, and go to state 22
  $default      reduce using rule 6 (expression)


state 6

   7) subexpression : item _ subexpression
   8) subexpression : item _

  ANCHOR        shift, and go to state 9
  LPAREN        shift, and go to state 10
  LBRACKET      shift, and go to state 12
  CHAR_CLASS    shift, and go to state 13
  CHAR_TYPE     shift, and go to state 14
  CHAR          shift, and go to state 15
  COMMA         shift, and go to state 16
  DASH          shift, and go to state 17
  INTEGER       shift, and go to state 18
  PERIOD        shift, and go to state 19
  $default      reduce using rule 8 (subexpression)

  item          go to state 6
  subexpression  go to state 23
  group         go to state 7
  match         go to state 8
  match_item    go to state 11

state 7

   9) item : group _

  $default      reduce using rule 9 (item)


state 8

  10) item : match _

  $default      reduce using rule 10 (item)


state 9

  11) item : ANCHOR _

  $default      reduce using rule 11 (item)


state 10

  12) group : LPAREN _ expression RPAREN quantifier
  13) group : LPAREN _ expression RPAREN

  ANCHOR        shift, and go to state 9
  LPAREN        shift, and go to state 10
  LBRACKET      shift, and go to state 12
  CHAR_CLASS    shift, and go to state 13
  CHAR_TYPE     shift, and go to state 14
  CHAR          shift, and go to state 15
  COMMA         shift, and go to state 16
  DASH          shift, and go to state 17
  INTEGER       shift, and go to state 18
  PERIOD        shift, and go to state 19

  subexpression  go to state 5
  item          go to state 6
  group         go to state 7
  match         go to state 8
  expression    go to state 24
  match_item    go to state 11

state 11

  14) match : match_item _ quantifier
  15) match : match_item _

  LBRACE        shift, and go to state 26
  STAR          shift, and go to state 27
  PLUS          shift, and go to state 28
  QMARK         shift, and go to state 29
  $default      reduce using rule 15 (match)

  quantifier    go to state 25

state 12

  16) match_item : LBRACKET _ CARET character_group_items RBRACKET
  17) match_item : LBRACKET _ character_group_items RBRACKET

  CARET         shift, and go to state 30
  CHAR_CLASS    shift, and go to state 33
  CHAR          shift, and go to state 34
  COMMA         shift, and go to state 35
  INTEGER       shift, and go to state 36

  character_group_items  go to state 31
  character_group_item  go to state 32

state 13

  18) match_item : CHAR_CLASS _

  $default      reduce using rule 18 (match_item)


state 14

  19) match_item : CHAR_TYPE _

  $default      reduce using rule 19 (match_item)


state 15

  20) match_item : CHAR _

  $default      reduce using rule 20 (match_item)


state 16

  21) match_item : COMMA _

  $default      reduce using rule 21 (match_item)


state 17

  22) match_item : DASH _

  $default      reduce using rule 22 (match_item)


state 18

  23) match_item : INTEGER _

  $default      reduce using rule 23 (match_item)


state 19

  24) match_item : PERIOD _

  $default      reduce using rule 24 (match_item)


state 20


  $end          shift, and go to state 37


state 21

   3) root : CARET expression _

  $default      reduce using rule 3 (root)


state 22

   5) expression : subexpression PIPE _ expression

  ANCHOR        shift, and go to state 9
  LPAREN        shift, and go to state 10
  LBRACKET      shift, and go to state 12
  CHAR_CLASS    shift, and go to state 13
  CHAR_TYPE     shift, and go to state 14
  CHAR          shift, and go to state 15
  COMMA         shift, and go to state 16
  DASH          shift, and go to state 17
  INTEGER       shift, and go to state 18
  PERIOD        shift, and go to state 19

  subexpression  go to state 5
  expression    go to state 38
  item          go to state 6
  group         go to state 7
  match         go to state 8
  match_item    go to state 11

state 23

   7) subexpression : item subexpression _

  $default      reduce using rule 7 (subexpression)


state 24

  12) group : LPAREN expression _ RPAREN quantifier
  13) group : LPAREN expression _ RPAREN

  RPAREN        shift, and go to state 39


state 25

  14) match : match_item quantifier _

  $default      reduce using rule 14 (match)


state 26

  32) quantifier : LBRACE _ multiple_integer COMMA multiple_integer RBRACE
  33) quantifier : LBRACE _ multiple_integer COMMA RBRACE
  34) quantifier : LBRACE _ COMMA multiple_integer RBRACE
  35) quantifier : LBRACE _ multiple_integer RBRACE

  COMMA         shift, and go to state 41
  INTEGER       shift, and go to state 43

  multiple_integer  go to state 40
  single_integer  go to state 42

state 27

  36) quantifier : STAR _

  $default      reduce using rule 36 (quantifier)


state 28

  37) quantifier : PLUS _

  $default      reduce using rule 37 (quantifier)


state 29

  38) quantifier : QMARK _

  $default      reduce using rule 38 (quantifier)


state 30

  16) match_item : LBRACKET CARET _ character_group_items RBRACKET

  CHAR_CLASS    shift, and go to state 33
  CHAR          shift, and go to state 34
  COMMA         shift, and go to state 35
  INTEGER       shift, and go to state 36

  character_group_items  go to state 44
  character_group_item  go to state 32

state 31

  17) match_item : LBRACKET character_group_items _ RBRACKET

  RBRACKET      shift, and go to state 45


state 32

  25) character_group_items : character_group_item _ character_group_items
  26) character_group_items : character_group_item _

  CHAR_CLASS    shift, and go to state 33
  CHAR          shift, and go to state 34
  COMMA         shift, and go to state 35
  INTEGER       shift, and go to state 36
  $default      reduce using rule 26 (character_group_items)

  character_group_item  go to state 32
  character_group_items  go to state 46

state 33

  27) character_group_item : CHAR_CLASS _

  $default      reduce using rule 27 (character_group_item)


state 34

  28) character_group_item : CHAR _ DASH CHAR
  29) character_group_item : CHAR _

  DASH          shift, and go to state 47
  $default      reduce using rule 29 (character_group_item)


state 35

  30) character_group_item : COMMA _

  $default      reduce using rule 30 (character_group_item)


state 36

  31) character_group_item : INTEGER _

  $default      reduce using rule 31 (character_group_item)


state 37


  $default      accept


state 38

   5) expression : subexpression PIPE expression _

  $default      reduce using rule 5 (expression)


state 39

  12) group : LPAREN expression RPAREN _ quantifier
  13) group : LPAREN expression RPAREN _

  LBRACE        shift, and go to state 26
  STAR          shift, and go to state 27
  PLUS          shift, and go to state 28
  QMARK         shift, and go to state 29
  $default      reduce using rule 13 (group)

  quantifier    go to state 48

state 40

  32) quantifier : LBRACE multiple_integer _ COMMA multiple_integer RBRACE
  33) quantifier : LBRACE multiple_integer _ COMMA RBRACE
  35) quantifier : LBRACE multiple_integer _ RBRACE

  COMMA         shift, and go to state 49
  RBRACE        shift, and go to state 50


state 41

  34) quantifier : LBRACE COMMA _ multiple_integer RBRACE

  INTEGER       shift, and go to state 43

  multiple_integer  go to state 51
  single_integer  go to state 42

state 42

  39) multiple_integer : single_integer _ multiple_integer
  40) multiple_integer : single_integer _

  INTEGER       shift, and go to state 43
  $default      reduce using rule 40 (multiple_integer)

  single_integer  go to state 42
  multiple_integer  go to state 52

state 43

  41) single_integer : INTEGER _

  $default      reduce using rule 41 (single_integer)


state 44

  16) match_item : LBRACKET CARET character_group_items _ RBRACKET

  RBRACKET      shift, and go to state 53


state 45

  17) match_item : LBRACKET character_group_items RBRACKET _

  $default      reduce using rule 17 (match_item)


state 46

  25) character_group_items : character_group_item character_group_items _

  $default      reduce using rule 25 (character_group_items)


state 47

  28) character_group_item : CHAR DASH _ CHAR

  CHAR          shift, and go to state 54


state 48

  12) group : LPAREN expression RPAREN quantifier _

  $default      reduce using rule 12 (group)


state 49

  32) quantifier : LBRACE multiple_integer COMMA _ multiple_integer RBRACE
  33) quantifier : LBRACE multiple_integer COMMA _ RBRACE

  INTEGER       shift, and go to state 43
  RBRACE        shift, and go to state 56

  multiple_integer  go to state 55
  single_integer  go to state 42

state 50

  35) quantifier : LBRACE multiple_integer RBRACE _

  $default      reduce using rule 35 (quantifier)


state 51

  34) quantifier : LBRACE COMMA multiple_integer _ RBRACE

  RBRACE        shift, and go to state 57


state 52

  39) multiple_integer : single_integer multiple_integer _

  $default      reduce using rule 39 (multiple_integer)


state 53

  16) match_item : LBRACKET CARET character_group_items RBRACKET _

  $default      reduce using rule 16 (match_item)


state 54

  28) character_group_item : CHAR DASH CHAR _

  $default      reduce using rule 28 (character_group_item)


state 55

  32) quantifier : LBRACE multiple_integer COMMA multiple_integer _ RBRACE

  RBRACE        shift, and go to state 58


state 56

  33) quantifier : LBRACE multiple_integer COMMA RBRACE _

  $default      reduce using rule 33 (quantifier)


state 57

  34) quantifier : LBRACE COMMA multiple_integer RBRACE _

  $default      reduce using rule 34 (quantifier)


state 58

  32) quantifier : LBRACE multiple_integer COMMA multiple_integer RBRACE _

  $default      reduce using rule 32 (quantifier)

